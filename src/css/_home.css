/*são as configurações exclusivas da página home*/

.slider {
  /*aplicará as configurações no slider contido no cabeçalho (header)*/
  background-color: #000;
  color: #fff;
  /*por convenção e boas práticas de escrita, é comum utilizar as cores en hexadecimal, ao invés de utilizar seus respectivos nomes*/

  /*OUTRA OPÇÃO De APLICAÇÃO DO BACKGROUND
  
  background-image: url(./images/banner.jpg);
  colocar uma imagem como background deste elemento
  sempre colocar o ./ pois ele simboloza a pasta onde está o nosso style.css, pesquisando se tem uma pasta images e um arquivo banner.jpg

  background-size: cover;
  garantir que essa imagem será exibida por inteira, de uma forma que não distorça a imagem

  background-repeat: no-repeat;
  define que o background não se repita, ficando uma única imagem

  background-position: center;
  define o posicionamento do backgroud, para que o centro da imagem se aplique no centro do elemento*/
}

.slider__prev-arrow,
.slider__next-arrow {
/*aplicará as configurações para as classes em questão*/
  width: 2.5rem;
  /*definirá a largura da caixa que contem a seta do slider, 40px/16px = 2.5rem*/
  height: 2.5rem;
  /*definirá a altura da caixa que contem a seta do slider, 40px/16px = 2.5rem*/
  border: 5px solid #fff;
  /*aplicará as configurações de borda para a caixa das setas do slider, sendo a largura de linha, o estilo de linha e a cor*/
  border-right: unset;
  /*definirá que não temos uma borda à direita*/
  border-bottom: unset;
  /*definirá que não temos uma borda abaixo*/
  opacity: 0.9;
  /*definirá a opacidade das setas, dando um aspecto mais agradável (vai de 0 a 1), sendo 0 totalmente transparente e 1 totalmente visível*/
}

.slider__prev-arrow {
  /*aplicará as configurações para a seta prévia (esquerda) do slider*/
  z-index: 1;
  /*aplicará a posição de prioridade para a seta, pois ela estava ficando por trás dos banners, devido ao efeito cascata*/
  left: 1rem;
  /*aplicará a posição 1rem à esquerda para as setas do carrocel - feitas com slick no JS*/
  transform: rotate(-45deg);
  /*definirá a rotação do elemento em 45 graus no sentido anti-horário para ficar no formato de seta para a esquerda*/
}

.slider__next-arrow {
  /*aplicará as configurações para a seta posterior (direita) do slider*/
  right: 1rem;
  /*aplicará a posição 1rem à esquerda para as setas do carrocel - feitas com slick no JS*/
  transform: rotate(135deg);
  /*definirá a rotação do elemento em 135 graus no sentido horário para ficar no formato de seta para a direite*/
}

.slider__prev-arrow::before,
.slider__next-arrow::before {
/*aplicará as configurações para o pseudo-seletor do before das classes em questão, ou seja, para ser renderizado antes (before) do elemento ou depois (after)*/
  content: '';
  /*retirando o conteúdo da caixa de elemento*/
}

/* Mobile */
.slick-arrow {
  /* display: none; */
  visibility: hidden;
  /* Fará com que na visualização mobile não apareçam as setas */
}  

/* Desktop */
@media screen and (min-width: 1280px) {
  .slick-arrow {
    visibility: visible;
    /*Fará com que as setas apareçam na visualização para desktop*/
  }
}

.slide {
  /*aplicará as configurações tanto na imagem quanto no texto do cabeçalho*/
  position: relative;
  /*isso fará com que o filho fique preso dentro do pai, ou seja, não deixará o slide__copy sairá para fora do elemento slide, ou seja, ir para baixo da nossa altura*/
  height: 90vh;
  /*aplicará a altura do slider baseado em 90 de visual height, ou seja, 90% da visualização de tela*/
}

.slide__background-image {
  /*aplicará as configurações na imagem do background*/
  width: 100%;
  /*ocupa a largura inteira disponível*/
  height: 100%;
  /*ocupa a altura inteira disponível*/
  object-fit: cover;
  /*propriedade para cobrir a tela*/
  object-position: center;
  /*propriedade para centralizar a imagem*/
}

/* Mobile */
.slide__copy {
  /*aplicará as configurações no texto do cabeçalho*/
  position: absolute;
  /*define a posição dos elementos de texto, neste caso - deixa ele ir para todo lugar da página - este é o elemento pai*/
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: grid;
  align-items: center;
  text-align: center;
  /* Propriedade padrão para centralizar textos */

  /* top: 6.25rem; */
  /*define que ele ficará no topo, numa distância de 6.25rem a partir da barra de navegação, pois no projeto, a distância é de 100px, que dividido por 16px, resulta nos 6.25rem, respeitando a largura da barra de navegação*/
  /* left: 50vw; */
  /*define que o texto aparecerá a partir de 50vw*/
}

/* Mobile */
.slide__copy span {
  display: block;
  /* Fará a quebra de linha na visualização mobile */
}

/* Desktop */
@media screen and (min-width: 1280px) {
  .slide__copy {
    padding-left: 50vw;
    /* Isso fará com que o dispositivo limite a visualização de 50vw no desktop e permita a visualização de todo o conteúdo no mobile */
    text-align: unset;
    /* Removerá a propriedade que tinha antes */
  }

  .slide__copy span {
    display: inline;
    /* Fará com que o dispositivo mantenha a visualização em linha no desktop, enquanto que no mobile, estará havendo a quebra de linha, por conta do display block */
  }
  }

.slide__copy h6 {
  /*aplicará as configurações para todos os h6 que estiverem dentro da classe slide__copy*/
  font-size: 0.9375rem;
  /*define o tamanho da fonte - como no projeto tem 15px, são 15/16, ou seja, 0.9375rem*/
  font-weight: 400;
  /*define o peso da fonte - como no projeto é regular, então seria o equivalente a 400*/
  text-transform: uppercase;
  /*define que o texto ficará todo em caixa-alta*/
  letter-spacing: 0.1875rem;
  /*define o espaçamento personalizado entre as letras, conforme estipulado em projeto*/
}

/* Mobile */
.slide__copy h2 {
  /*aplicará as configurações para todos os h2 que estiverem dentro da classe slide__copy*/
  font-size: 3.25rem;
  /*define o tamanho da fonte - como no projeto tem 100px, são 100/16, ou seja,6.25rem
  Fazendo a adaptação para mobile first - foi alterado o valor para 3.25 e definido um @media screen para o desktop a seguir*/
  text-transform: uppercase;
  /*define que o texto ficará todo em caixa-alta*/
  line-height: 3.25rem;
  /*define a altura de linha, para que o espaçamento entre as palavras fique identico ao projeto
  Fazendo a adaptação para mobile first - foi alterado o valor para 3.25 e definido um @media screen para o desktop a seguir*/
}

/* Desktop */
@media screen and (min-width: 1280px) {
  .slide__copy h2 {
    font-size: 6.25rem;
    /*define o tamanho da fonte - como no projeto tem 15px, são 15/16, ou seja, 0.9375rem*/
    line-height: 6.25rem;
    /*define a altura de linha, para que o espaçamento entre as palavras fique identico ao projeto*/
  }
}

.slide__copy h2 span {
  /*aplicará as configurações para o elemento SPAN dentro do h2*/
  display: block;
  /*define que independente da resolução da tela, haverá a quebra de linha entre as palavras CREATIVE e MINDS, conforme o projeto*/
}

#counter {
  /*atribuirá propriedades ao seletor de ID counter*/
  background-color: var(--color-primary);
  /*define a cor do background para o default do projeto*/
  color: #fff;
  /*define a cor do texto*/
  text-transform: uppercase;
  /*define que o texto seja em letra maiúscula*/
}

.counter__container {
  /*atribuirá propriedades ao seletor de classe em questão*/
  display: grid;
  /*fará a quebra do texto para baixo, ao invés de alinhamento na horizontal - precisa definir o número de colunas*/
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  /*fará a divisão em um número específico de colunas - colocando uma fração para cada, ele entenderá que é para distribuir igualmente as colunas naquele trecho - a função repeat exige como primeiro dado o número de repetições e como segundo dado a fração para cada trecho - acrescentamos ainda a função minmax para definir que cada trecho deve se apresentar em no mínimo 300px e no máximo 1fr*/
  place-items: center;
  /*funciona como justify-itens e aligh-itens, afetando horizontalmente e verticalmente a posição dos elementos*/
  padding: 4.375rem 1rem;
  /*definirá o espaçamento entre o texto e os limites superiores e inferiores do container - no projeto, por padrão tem 70px, ou seja, 70/16 = 4.375rem e colocado 1rem para a esquerda e direita*/
}

.counter__container h3 {
  /*para aplicar propriedades para somente os h3 que estão dentro dessa classe*/
  font-size: 2.1875rem;
  /*define o tamanho da fonte, como são 35px em projeto, então, 35/16 = 2.1875rem*/
}

.counter__container h3 small {
  /*para aplicar propriedades para somente os <small> que estão dentro desta tag*/
  display: block;
  /*define a quebra de linha entre os elementos*/
  font-size: 1.25rem;
  /*define o tamanho da fonte, como são 20px em projeto, então 20/16 = 1.25rem*/
}

/* Mobile */
.institutional {
  /*aplicará propriedades para a classe institutional*/
  display: grid;
  /*fará a quebra do texto para baixo, ao invés de alinhamento na horizontal - precisa definir o número de colunas*/
  grid-template-rows: auto auto;
  /*grid-template-columns: auto auto - fará a divisão em um número específico de colunas - colocando uma fração para cada, ele entenderá que é para distribuir proporcionalmente as colunas naquele trecho - usando automático, ele usará o espaço disponível para a imagem e deixará um espaço com respiro maior para o nosso texto, ao invés de forçarmos isso, ficando mais harmonioso, deixando o navegador calcular quanto ele teria que aplicar.
  Alteramos posteriormente para grid-template-rows: auto auto; - em decorrência da responsividade aplicada logo abaixo*/
  gap: 3.125rem;
  /*define o espaçamento entre os elementos*/
  align-items: center;
  /*fará com que os elementos fiquem alinhados ao centro - no projeto são 50px, portanto, 50/16 = 3.125rem*/
  padding: 0 0 4.375rem 0;
  /*definirá o espaçamento entre o conteúdo e os limites superiores e inferiores do container - no projeto, por padrão tem 70px, ou seja, 70/16 = 4.375rem para baixo, então fazemos desta forma pois a sequencia é CIMA DIREITA BAIXO ESQUERDA*/
}

/* Desktop - para não quebrar o conteúdo em resoluções menores */
@media screen and (min-width: 1280px) {
  .institutional {
    grid-template-columns: auto auto;
    padding: 4.375rem;
    /*definirá o espaçamento entre o conteúdo e os limites superiores e inferiores do container - no projeto, por padrão tem 70px, ou seja, 70/16 = 4.375rem*/
  }
}

/* Mobile */
.institutional__image {
  /*aplicará as propriedades para a classe em questão (primeira caixa - imagem)*/
  max-width: 100vw;
  /*toda vez que estou definindo uma largura máxima, posso definí-la em pixels
  Este valor foi alterado de 550px para 100vw por conta da responsividade mobile, sendo 100view width para se encaixar na tela*/
}

/* Tablet */
@media screen and (min-width: 719px) and (max-width: 1279px) {
  .institutional__image {
    justify-self: center;
    /*Farão o alinhamento na horizontal da imagem para ficar ao centro da tela*/
  }
}

/* Desktop */
@media screen and (min-width: 1280px) {
  .institutional__image {
    max-width: 550px;
    /* Definirá que a partir de 1280px a imagem terá no máximo 550px de largura */
  }
}

/* Mobile */
.institutional__copy {
  /*aplicará as propriedades para a classe em questão (segunda caixa - texto)*/
  padding: 0 1rem 1.875rem 1rem; /* Mobile */
  /*definirá o espaçamento entre o conteúdo e os limites superiores e inferiores do container como zero e o espaçamento entre o conteúdo e os limites da esquerda e direita do projeto - no projeto, por padrão, tem 30px, ou seja, 30/16 = 1.875rem */
  /* Depois foi alterado para 0 1rem 1.875rem 1rem por conta da visualização em mobile */
}

/* Desktop */
@media screen and (min-width: 1280px) {
  .institutional__copy {
    padding: 0 1.875rem;
    /* No desktop queremos aplicar o padding somente para os lados */
  }
}

.institutional__copy h6 {
  /*aplicará as propriedades para os elementos h6 contidos nesta classe*/
  font-size: 0.875rem;
  /*definirá o tamanho da fonte conforme especificado em projeto, que no caso é 14px, ou seja, 14/16=0.875rem*/
  font-weight: 400;
  /*definirá o peso da fonte (medium)*/
  letter-spacing: 0.1rem;
  /*definirá o espaçamento entre as letras - no projeto, seria de 1px, ou seja, 1/16 = 0.0625rem, mas arredondaremos para 0.1rem*/
  text-transform: uppercase;
  /*definirá a formatação em caixa alta para o texto*/
  margin: 0;
  /*definirá a margem do elemento para zero*/

}

.institutional__copy h4 {
  /*aplicará as propriedades para os elementos h4 contidos nesta classe*/
  font-size: 1.5625rem;
  /*definirá o tamanho da fonte conforme especificado em projeto, que no caso é 25px, ou seja, 25/16=1.5625rem*/
  /*por default o h4 já recebe o peso "bold", então, não é preciso estilizar o peso da fonte*/
  margin-top: 1rem;
  /*definirá a margem do topo deste elemento para 16px, conforme projeto, ou seja, 1rem*/
}

.institutional p {
  /*aplicará as propriedades para o elemento <p> contido nesta classe*/
  font-family: 'Roboto', sans-serif;
  /*definirá a fonte Roboto como principal para este elemento, e uma segunda opção de carregamento, como a sans-serif*/
  font-size: 1.0625rem;
  /*definirá o tamanho da fonte conforme especificado em projeto, que no caso é 17px, ou seja, 17/16=1.0625rem*/
  line-height: 1.6875rem;
  /*define a altura de linha, para que o espaçamento entre as palavras fique identico ao projeto, que neste caso é 27px, ou seja, 27/16=1.6875rem*/
  /* margin-bottom: 0; */
  /*primeiro ele zera a margem de baixo e logo na sequência inclui o novo valor de margem, para mostrar como o efeito em cascata funciona*/
  margin-bottom: 2.5rem;
  /*define a margem de baixo para 40px, ou seja, 40/16=2.5rem, conforme projeto*/
}

/* Mobile */
.quote {
  /*as propriedades serão aplicadas para a seção com classe quote*/
  background-image: url(../images/parallax.jpg);
  /*faz a importação da imagem salva na pasta - meste caso usamos .. pois ele precisa voltar uma pasta, para acessar a pasta images, já que agora ela é irmã da pasta css*/
  /* background-attachment: fixed; */
  /*define o efeito do parallax acontecendo, que é a tela passando pela imagem*/
  /* Aplicando a responsividade o background-attachment: fixed foi retirado daqui para remoção do efeito parallax na visualização mobile */
  background-repeat: no-repeat;
  /*definirá que não haja a repetição do background durante o efeito*/
  background-size: auto 40%;
  /*definirá que o nosso background ocupará mais espaço, ou seja, cobrirá a região*/
  /* Aplicando a responsividade, a largura ficou definida para automatica e a altura para 50% da altura de tela ou do elemento pai */
  background-position: 40% top;
  /*definirá que o nosso background ficará 40% do eixo X e no top do eixo Y na tela*/
  /* Aplicando a responsividade, foi alterado de center para top center */
}

/* Desktop */
@media screen and (min-width: 720px) {
  .quote {
    background-attachment: fixed;
    /*define o efeito do parallax acontecendo, que é a tela passando pela imagem*/
    background-size: cover;
    /*definirá que o nosso background ocupará mais espaço, ou seja, cobrirá a região*/
    background-position: center;
    /*definirá que o nosso background ficará centralizado na tela*/
  }
  
}

/* Mobile */
.quote__container {
  /*aplicará as propriedades no container que está contido na seção quote*/
  display: grid;
  /*definirá a exibição dos elementos como tabela*/
  align-items: end;
  /*definirá o alinhamento dos itens no centro*/
  /* Aplicando a responsividade foi alterado este item de "align-items: center" para "end", ou seja, o container ficará alinhado ao bottom, ao final (organiza os itens na vertical) */
  justify-items: end;
  /*definirá o alinhamento da caixa na direita*/
  min-height: 80vh;
  /*define a altura mínima de visualização da imagem - view height*/
  /* Aplicando aresponsividade foi alterado este item de 80vh para 100vh (viewport high) */
}

/* Desktop */
@media screen and (min-width: 720px) {
  .quote__container {
    align-items: center;
    /* Para alinhar os itens ao centro */
  }
}

/* Mobile */
.quote__copy {
  /*aplicará as propriedades para a classe em questão*/
  background-color: #fff;
  /*definirá a cor branca para o background da caixa como é em projeto*/
  padding: 1rem;
  /*define o tamanho dinâmico da caixa, por conta do espaçamento entre o texto e as bordas da caixa, sendo que o primeiro valor é para cima e para baixo (90px/16px=5.625rem) e o segundo valor é para esquerda e direita (70px/16px=4.375rem)*/
  /* Aplicando a responsividade este valor foi alterado para apenas 1rem */
  padding-bottom: 4rem;
  /* Aplicado o valor de padding botttom do botão para a caixa branca de 4rem, para a visualização no mobile */
}

/* Tablet */
@media screen and (min-width: 720px) and (max-width: 1279px) {
  .quote__copy {
    align-items: center;
    justify-self: center;
    /*Farão o alinhamento na vertical e horizontal respectivamente*/
  }
}

/* Desktop */
@media screen and (min-width: 1280px) {
  .quote__copy {
    padding: 5.625rem 4.375rem;
    /*define o tamanho dinâmico da caixa, por conta do espaçamento entre o texto e as bordas da caixa, sendo que o primeiro valor é para cima e para baixo (90px/16px=5.625rem) e o segundo valor é para esquerda e direita (70px/16px=4.375rem)*/
  }
}

.quote__copy h6 {
  /*aplicará as propriedades para o elemento h6 dentro do quote__copy*/
  font-size: 0.8rem;
  /*define o tamanho da fonte, que no caso é (15px/16px=0.9375rem)*/
  /* Adicionando a responsividade, o valor foi alterado de 0.9375rem para 0.8rem para caber em tela do dispositivo mobile */
  font-weight: 400;
  /*define o peso da fonte, que no caso do projeto é regular*/
  letter-spacing: 0.1875rem;
  /*define o espaçamento entre as letras, que em projeto é de (3px/16px=0.1875rem)*/
  line-height: 1.4375rem;
  /*define a altura entre linhas, que em projeto é de (23px/16px=1.4375rem)*/
  max-width: 53ch;
  /*define a largura de um elemento que tenha texto, a partir de um limite de caracteres para haver a quebra de linha forçada - ideal para aplicar nos parágrafos do site*/
  text-transform: uppercase;
  /*define as letras para ficarem todas em caixa alta*/
  margin: 0;
  /*remove a margem do elemento h6*/
}

/* Mobile */
.quote__copy h2 {
  /*aplicará as propriedades para o elemento h2 dentro do quote__copy*/
  font-size: 4rem;
  /*define o tamanho da fonte, que no caso é (80px/16px=5rem) - o font-weight está certo, porque a formatação do h2 já é bold por padrão*/
  /* Aplicando a responsividade o valor foi alterado de 5rem para 4rem para caber em tela do dispositivo mobile */
  line-height: 4rem;
  /*define a altura entre linhas, que em projeto é de (80px/16px=5rem)*/
  /* Aplicando a responsividade o valor foi alterado de 5rem para 4rem para caber em tela do dispositivo mobile */
  text-transform: uppercase;
  /*define as letras para ficarem todas em caixa alta*/
  letter-spacing: -0.1875rem;
  /*define o espaçamento entre as letras, que em projeto é de (-3px/16px=-0.1875rem)*/
  margin: 1.875rem 0;
  /*define a margem superior/inferior do elemento h2 para se aproximar do resultado esperado em projeto (30px/16px=1.875rem) - em projeto, seria 40px, mas não leva em consideração o tamanho da própria fonte, então diminuímos um pouco para ficar em escala mais aproximada e definimos margem 0 para esquerda e direita pois não há*/
}

.quote__copy h2 span {
  /*aplicará as propriedades para o elemento span do h2 dentro do quote__copy*/
  display: block;
  /*define a quebra de linha dos elementos de texto, visto que no HTML já foi preparado para fazer desta forma, através do display: block*/
}

/* Desktop */
@media screen and (min-width: 1280px) {
  .quote__copy h6 {
    font-size: 0.9375rem;
    /*define o tamanho da fonte, que no caso é (15px/16px=0.9375rem)*/
  }

  .quote__copy h2 {
    font-size: 5rem;
    /*define o tamanho da fonte, que no caso é (80px/16px=5rem) - o font-weight está certo, porque a formatação do h2 já é bold por padrão*/
    line-height: 5rem;
    /*define a altura entre linhas, que em projeto é de (80px/16px=5rem)*/
  }
}